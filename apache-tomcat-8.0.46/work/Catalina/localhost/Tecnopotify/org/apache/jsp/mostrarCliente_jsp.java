/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.46
 * Generated at: 2017-10-18 03:43:17 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.sun.corba.se.spi.presentation.rmi.StubAdapter.request
        (Object;
import String;
import boolean);
import edu.tecnopotify.entidades.Temas;
import java.util.List;
import edu.tecnopotify.entidades.Artista;
import java.awt.PageAttributes.MediaType;
import edu.tecnopotify.entidades.Cliente;
import java.lang.String;
import edu.tecnopotify.fabrica.Fabrica;
import edu.tecnopotify.interfaces.IControlador;
import edu.tecnopotify.entidades.Usuario;
import java.util.Iterator;
import java.util.ArrayList;

public final class mostrarCliente_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("edu.tecnopotify.entidades.Temas");
    _jspx_imports_classes.add("edu.tecnopotify.entidades.Cliente");
    _jspx_imports_classes.add("java.util.Iterator");
    _jspx_imports_classes.add("String");
    _jspx_imports_classes.add("java.util.ArrayList");
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("boolean)");
    _jspx_imports_classes.add("com.sun.corba.se.spi.presentation.rmi.StubAdapter.request
        (Object");
    _jspx_imports_classes.add("edu.tecnopotify.entidades.Artista");
    _jspx_imports_classes.add("edu.tecnopotify.entidades.Usuario");
    _jspx_imports_classes.add("java.lang.String");
    _jspx_imports_classes.add("java.awt.PageAttributes.MediaType");
    _jspx_imports_classes.add("edu.tecnopotify.fabrica.Fabrica");
    _jspx_imports_classes.add("edu.tecnopotify.interfaces.IControlador");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("    <head>\n");
      out.write("        <meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\n");
      out.write("        <title>Datos Cliente</title>\n");
      out.write("        ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/templates/csss.jsp", out, false);
      out.write("\n");
      out.write("    </head>\n");
      out.write("    <body>\n");
      out.write("        ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/templates/header.jsp", out, false);
      out.write("\n");
      out.write("        <div class=\"container\">\n");
      out.write("            <h1>Datos Cliente</h1>\n");
      out.write("        </div>\n");
      out.write("\n");
      out.write("\n");
      out.write("        ");
      out.write("\n");
      out.write("        <div class=\"container\">\n");
      out.write("\n");
      out.write("            <div class=\"container\">\n");
      out.write("\n");
      out.write("                <h3>Nombre: </h3>\n");
      out.write("                <input type=\"text\"  value =");
      out.print( request.getAttribute("nombre"));
      out.write(" /> <br/>\n");
      out.write("                <h3>Apellido: </h3>\n");
      out.write("                <input type=\"text\" value =");
      out.print( request.getAttribute("apellido"));
      out.write(" /> <br/>\n");
      out.write("                <h3>Fecha de Nacimiento: </h3> <br/>\n");
      out.write("                <input type=\"text\"  value =");
      out.print( request.getAttribute("dia"));
      out.write(" />\n");
      out.write("                /\n");
      out.write("                <input type=\"month\"  value =");
      out.print( request.getAttribute("mes"));
      out.write(" />\n");
      out.write("                /\n");
      out.write("                <input type=\"text\"  value =");
      out.print( request.getAttribute("anio"));
      out.write(" /> <br/>\n");
      out.write("                <h3>Mail:</h3>\n");
      out.write("                <input type=\"text\"  value =");
      out.print( request.getAttribute("mail"));
      out.write(" /> <br/>\n");
      out.write("                <h3>Imagen:</h3>\n");
      out.write("                <div class=\"container\" style=\"margin-top: 60px\">\n");
      out.write("                    <img src=\"");
      out.print( request.getAttribute("imagen"));
      out.write("\" />\n");
      out.write("                </div> \n");
      out.write("                <h3>Tipo de Suscripcion:</h3>\n");
      out.write("                <input type=\"text\"  value =");
      out.print( request.getAttribute("suscripcion"));
      out.write(" /> <br/>\n");
      out.write("\n");
      out.write("                ");
 List<String> temas = (ArrayList) request.getAttribute("temas");
                    Iterator<String> itT = temas.iterator();
                    List<String> albums = (ArrayList) request.getAttribute("albums");
                    Iterator<String> itA = albums.iterator();
                    List<String> listRepFav = (ArrayList) request.getAttribute("listRFav");
                    Iterator<String> itRepFav = listRepFav.iterator();
                    List<String> listRepProp = (ArrayList) request.getAttribute("listRpropia");
                    Iterator<String> itRepProp = listRepProp.iterator();
                    List<String> listseg = (ArrayList) request.getAttribute("seguidos");
                    Iterator<String> itSeg = listseg.iterator();
                
      out.write("      \n");
      out.write("                <h3>Temas Favoritos:</h3>   \n");
      out.write("                <table>\n");
      out.write("                    ");
 while (itT.hasNext()) {
      out.write("\n");
      out.write("                    <tr>\n");
      out.write("                        <td>");
      out.print( itT.next() );
      out.write("</td>                        \n");
      out.write("                    </tr>\n");
      out.write("                    ");
}
      out.write("\n");
      out.write("                </table> <br/>\n");
      out.write("\n");
      out.write("                <h3>Albums Favoritos:</h3>   \n");
      out.write("                <table>\n");
      out.write("                    ");
 while (itA.hasNext()) {
      out.write("\n");
      out.write("                    <tr>\n");
      out.write("                        <td><a href= \"");
      out.print( request.getContextPath());
      out.write("/mostrarAlbum.jsp\">itA.next()</a></td>                                    \n");
      out.write("                    </tr>\n");
      out.write("                    ");
}
      out.write("\n");
      out.write("                </table> <br/>\n");
      out.write("\n");
      out.write("                <h3>Lista Reproduccion Favoritos:</h3>   \n");
      out.write("                <table>\n");
      out.write("                    ");
 while (itRepFav.hasNext()) {
      out.write("\n");
      out.write("                    <tr>\n");
      out.write("                        <td>");
      out.print( itRepFav.next());
      out.write("</td>                        \n");
      out.write("                    </tr>\n");
      out.write("                    ");
}
      out.write("\n");
      out.write("                </table> <br/>\n");
      out.write("                \n");
      out.write("                 <h3>Lista Reproduccion Propia:</h3>   \n");
      out.write("                <table>\n");
      out.write("                    ");
 while (itRepProp.hasNext()) {
      out.write("\n");
      out.write("                    <tr>\n");
      out.write("                        <td>");
      out.print( itRepProp.next()  );
      out.write("</td>                        \n");
      out.write("                    </tr>\n");
      out.write("                    ");
}
      out.write("\n");
      out.write("                </table> <br/>\n");
      out.write("                \n");
      out.write("                 <h3>Lista de Seguidos:</h3>   \n");
      out.write("                <table>\n");
      out.write("                    ");
 while (itSeg.hasNext()) {
      out.write("\n");
      out.write("                    <tr>\n");
      out.write("                        <td>");
      out.print( itSeg.next() );
      out.write("</td>                        \n");
      out.write("                    </tr>\n");
      out.write("                    ");
}
      out.write("\n");
      out.write("                </table> <br/>\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("            </div>\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("            ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/templates/scripts.jsp", out, false);
      out.write("\n");
      out.write("    </body>\n");
      out.write("</html>\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
